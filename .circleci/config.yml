version: 2
jobs:
  build:
    working_directory: ~/renalware-diaverum
    docker:
      # this is important to use proper image with browsers support
      - image: circleci/ruby:2.5.3-stretch-node-browsers-legacy
        environment:
          PGHOST: 127.0.0.1
          PGUSER: renalware
          RAILS_ENV: test
      - image: circleci/postgres:10.3-alpine
        environment:
          POSTGRES_USER: renalware
      - image: redis:3.2.7

    parallelism: 1

    steps:
      - checkout
      - run: mkdir -p ./tmp/test-artifacts
      - run: mkdir -p ./coverage

      - type: cache-restore
        key: renalware-diaverum-{{ checksum "Gemfile.lock" }}

      - run: bundle install --path vendor/bundle --jobs=3 --retry=3

      - type: cache-save
        key: renalware-diaverum-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      #- run: sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
      - run: sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main" > /etc/apt/sources.list.d/PostgreSQL.list'
      - run: sudo sh -c 'wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -'
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-10

      - run: sudo apt install postgresql-client-10

      # Database set-up
      - run: cp ./spec/dummy/config/database.circle.yml ./spec/dummy/config/database.yml
      - run: RAILS_ENV=test bundle exec rake app:db:create
      - run: RAILS_ENV=test bundle exec rake app:db:structure:load

      # Check gems for security vulnerabilities in gems
      - run: bundle exec bundle-audit update && bundle exec bundle-audit check

      # RSpec
      - type: shell
        command: |
          case $CIRCLE_NODE_INDEX in 0) bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            --fail-fast ;; esac

      # Save artifacts ie coverage data
      - store_artifacts:
          path: ./tmp/test-artifacts
          destination: build

      # Upload test results (junit xml)
      - store_test_results:
          path: /tmp/test-results
